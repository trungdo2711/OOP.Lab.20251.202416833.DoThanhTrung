Question 1: After the call of swap(jungleDVD, cinderellaDVD) why does the title of these two objects still remain?
In java, a normal swap method won't work because Java does not have passing-by-reference. To illustrate, the normal swap method will create a copy of two parameters then swap the value of these two values, finally dump it into the trash bin. Therefore, the actual two value will not be swapped. In my explicit swap method, it creates copies of two indexes then tells the computer to swap the places of two parameters in the array, thus resulting in a successful swap whether the two indexes are removed or not.

Question 2: After the call of changeTitle(jungleDVD, cinderellaDVD.getTitle()) why is the title of the JungleDVD changed?
In the changeTitle() method, it creates a copy of jungleDVD named dvd then use the setter setTitle() to change the name of the dvd. The dvd copy points to the same address as the jungleDVD. The setTitle() setter is used to change the address that the dvd points to, changing the title into "Cinderella". The address that jungleDVD points to is also the same as that of the dvd copy. Therefore, the title of jungleDVD is changed to "Cinderella".

Question 3: Compare the difference between an array passing method and variable passing method
For passing variables, I used varargs as the passing parameter for the method. I can do every operation of the array using varags. Also, I can pass an arbitrary number of variables into the method instead of a fixed array
